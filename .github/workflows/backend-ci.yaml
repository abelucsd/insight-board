name: Node.js CI

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:5.0
        ports: -27017:27017
        options: >-
          --health-cmd="mongosh --eval 'db.runCommand({ ping: 1 })'"
          --health-interval=10s
          --health-interval=5s
          --health-retries=5

    env:
      MONGO_URI: ${{ secrets.MONGO_URI_DEV }}
      DB_NAME: ${{ secrets.DB_NAME_DEV }}
      NODE_ENV: development

    strategy:
      matrix:
        node-version: [16.x, 18.x]
      # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: ./backend/package-lock.json

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Show Python & OpenSSL version
        run: |
          python --version
          python -c "import ssl; print(ssl.OPENSSL_VERSION)"

      - name: Install Nodejs dependencies
        run: npm ci
        working-directory: ./backend

      - name: Install Python dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        working-directory: ./backend

      - name: Update CA certificates
        run: sudo apt-get update && sudo apt-get install -y ca-certificates

      - name: Run tests
        env:
          MONGO_URI: mongodb://localhost:27017/testdb
        run: npm test
        working-directory: ./backend

      - name: Build project
        run: npm run build --if-present
        working-directory: ./backend

      - name: Run code coverage
        run: npm run coverage
        working-directory: ./backend
